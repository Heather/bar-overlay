--- include/uapi/linux/aufs_type.h	2014-09-30 10:52:31.980935859 +0200
+++ include/uapi/linux/aufs_type.h	2014-09-29 21:02:48.814980022 +0200
@@ -20,22 +20,8 @@
 
 #define AUFS_NAME	"aufs"
 
-#ifdef __KERNEL__
-/*
- * define it before including all other headers.
- * sched.h may use pr_* macros before defining "current", so define the
- * no-current version first, and re-define later.
- */
-#define pr_fmt(fmt)	AUFS_NAME " %s:%d: " fmt, __func__, __LINE__
-#include <linux/sched.h>
-#undef pr_fmt
-#define pr_fmt(fmt) \
-		AUFS_NAME " %s:%d:%.*s[%d]: " fmt, __func__, __LINE__, \
-		(int)sizeof(current->comm), current->comm, current->pid
-#else
 #include <stdint.h>
 #include <sys/types.h>
-#endif /* __KERNEL__ */
 
 #include <linux/limits.h>
 
@@ -60,11 +46,6 @@
 #endif
 #endif
 
-#ifdef __KERNEL__
-#ifndef AUFS_BRANCH_MAX
-#error unknown CONFIG_AUFS_BRANCH_MAX value
-#endif
-#endif /* __KERNEL__ */
 
 /* ---------------------------------------------------------------------- */
 
@@ -147,12 +128,6 @@
 
 #define AuBrAttr_CMOO_Mask	(AuBrAttr_COO_Mask | AuBrWAttr_MOO)
 
-#ifdef __KERNEL__
-#ifndef CONFIG_AUFS_FHSM
-#undef AuBrAttr_FHSM
-#define AuBrAttr_FHSM		0
-#endif
-#endif
 
 /* the longest combination */
 #define AuBrPermStrSz	sizeof(AUFS_BRPERM_RW		\
@@ -165,27 +140,27 @@
 	char a[AuBrPermStrSz];
 } au_br_perm_str_t;
 
-static inline int au_br_writable(int brperm)
+static __inline__ int au_br_writable(int brperm)
 {
 	return brperm & AuBrPerm_RW;
 }
 
-static inline int au_br_whable(int brperm)
+static __inline__ int au_br_whable(int brperm)
 {
 	return brperm & (AuBrPerm_RW | AuBrRAttr_WH);
 }
 
-static inline int au_br_wh_linkable(int brperm)
+static __inline__ int au_br_wh_linkable(int brperm)
 {
 	return !(brperm & AuBrWAttr_NoLinkWH);
 }
 
-static inline int au_br_cmoo(int brperm)
+static __inline__ int au_br_cmoo(int brperm)
 {
 	return brperm & AuBrAttr_CMOO_Mask;
 }
 
-static inline int au_br_fhsm(int brperm)
+static __inline__ int au_br_fhsm(int brperm)
 {
 	return brperm & AuBrAttr_FHSM;
 }
@@ -216,11 +191,6 @@
 #define __aligned(x)			__attribute__((aligned(x)))
 #endif
 
-#ifdef __KERNEL__
-#ifndef __packed
-#define __packed			__attribute__((packed))
-#endif
-#endif
 
 struct au_rdu_cookie {
 	uint64_t	h_pos;
@@ -239,7 +209,7 @@
 	char		name[0];
 } __aligned(8);
 
-static inline int au_rdu_len(int nlen)
+static __inline__ int au_rdu_len(int nlen)
 {
 	/* include the terminating NULL */
 	return ALIGN(sizeof(struct au_rdu_ent) + nlen + 1,
@@ -247,7 +217,7 @@
 }
 
 union au_rdu_ent_ul {
-	struct au_rdu_ent __user	*e;
+	struct au_rdu_ent *e;
 	uint64_t			ul;
 };
 
